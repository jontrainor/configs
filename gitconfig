[credential]
    helper = osxkeychain
    useHttpPath = true
[difftool "kdiff3"]
    path = /Applications/kdiff3.app/Contents/MacOS/kdiff3
    trustExitCode = false
[difftool]
    prompt = false
[diff]
    tool = kdiff3
[mergetool "kdiff3"]
    path = /Applications/kdiff3.app/Contents/MacOS/kdiff3
    trustExitCode = false
    keepBackup = false
[merge]
    tool = kdiff3
		# tool = diffconflicts

[mergetool "diffconflicts"]
		cmd = 'diffconflicts vim $BASE $LOCAL $REMOTE $MERGED' 
    trustExitCode = true
    keepBackup = false

[alias]
	st = status
	co = checkout
	br = branch
	up = rebase
	ci = commit
	timeout = stash apply stash^{/timeout}
	pushorigin = push --set-upstream origin

	precommit = diff --cached --diff-algorithm=minimal -w
	unstage = reset -q HEAD --
	discard = checkout --
	uncommit = reset --mixed HEAD~
	overwrite = reset --hard
	strip = reset HEAD~1
	amend = commit --amend
	lastchange = rev-list -n 1 HEAD --
	graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order

# Thanks http://stackoverflow.com/questions/1057564/pretty-git-branch-graphs for log graph aliases
	lg1 = !"git --no-pager log -14 --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)%n' --all"
	lg2 = !"git --no-pager log -6 --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%n' --all"
[core]
	editor = vim
